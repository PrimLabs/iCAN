type TransformArgs = 
 record {
   icp_amount: nat64;
   to_canister_id: principal;
 };
type Result_1 = 
 variant {
   err: Error;
   ok: principal;
 };
type Result = 
 variant {
   err: Error;
   ok;
 };
type Error = 
 variant {
   Create_Canister_Failed: nat;
   Insufficient_Cycles;
   Invalid_Caller;
   Invalid_CanisterId;
   Ledger_Transfer_Failed: nat;
   No_Record;
   No_Wasm;
 };
service : {
  changeAdministrator: (vec principal) -> (text);
  createHub: (nat64) -> (Result_1);
  getBucket: () -> (vec principal) query;
  topUpSelf: (principal) -> ();
  transformIcp: (TransformArgs) -> (Result);
  uploadCycleWasm: (vec nat8) -> (text);
  uploadHubWasm: (vec nat8) -> (text);
  wallet_receive: () -> ();
}
